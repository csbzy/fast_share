// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.24.

// Section: imports

use super::*;
use crate::api::core::core::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::transform_result_dco;
use flutter_rust_bridge::{Handler, IntoIntoDart};
use tokio::sync::mpsc::{Receiver, Sender};
use tokio::sync::Mutex;

// Section: boilerplate

flutter_rust_bridge::frb_generated_boilerplate_io!();

#[no_mangle]
pub extern "C" fn frbgen_just_share_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockArcMutexOptiontokionetTcpListener(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Arc<Mutex<Option<tokio::net::TcpListener>>>,
        >,
    >::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_just_share_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockArcMutexOptiontokionetTcpListener(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Arc<Mutex<Option<tokio::net::TcpListener>>>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_just_share_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockArcMutexReceiverString(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Arc < Mutex < Receiver < String > > >>>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_just_share_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockArcMutexReceiverString(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Arc < Mutex < Receiver < String > > >>>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_just_share_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockArcMutexSenderString(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Arc < Mutex < Sender < String > > >>>::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_just_share_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockArcMutexSenderString(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Arc < Mutex < Sender < String > > >>>::decrement_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_just_share_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockstdsyncArcMutexOptionJustShareCore(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            std::sync::Arc<Mutex<Option<JustShareCore>>>,
        >,
    >::increment_strong_count(ptr as _);
}

#[no_mangle]
pub extern "C" fn frbgen_just_share_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockstdsyncArcMutexOptionJustShareCore(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            std::sync::Arc<Mutex<Option<JustShareCore>>>,
        >,
    >::decrement_strong_count(ptr as _);
}
