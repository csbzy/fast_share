// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.24.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/api.dart';
import 'api/command.dart';
import 'api/command/event.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  DiscoveryIp dco_decode_box_autoadd_discovery_ip(dynamic raw);

  @protected
  EventEnum dco_decode_box_autoadd_event_enum(dynamic raw);

  @protected
  RequestToReceive dco_decode_box_autoadd_request_to_receive(dynamic raw);

  @protected
  SendFile dco_decode_box_autoadd_send_file(dynamic raw);

  @protected
  Start dco_decode_box_autoadd_start(dynamic raw);

  @protected
  StartToReceive dco_decode_box_autoadd_start_to_receive(dynamic raw);

  @protected
  Stop dco_decode_box_autoadd_stop(dynamic raw);

  @protected
  DiscoveryIp dco_decode_discovery_ip(dynamic raw);

  @protected
  Event dco_decode_event(dynamic raw);

  @protected
  EventEnum dco_decode_event_enum(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  EventEnum? dco_decode_opt_box_autoadd_event_enum(dynamic raw);

  @protected
  RequestToReceive dco_decode_request_to_receive(dynamic raw);

  @protected
  SendFile dco_decode_send_file(dynamic raw);

  @protected
  Start dco_decode_start(dynamic raw);

  @protected
  StartToReceive dco_decode_start_to_receive(dynamic raw);

  @protected
  Stop dco_decode_stop(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  DiscoveryIp sse_decode_box_autoadd_discovery_ip(SseDeserializer deserializer);

  @protected
  EventEnum sse_decode_box_autoadd_event_enum(SseDeserializer deserializer);

  @protected
  RequestToReceive sse_decode_box_autoadd_request_to_receive(
      SseDeserializer deserializer);

  @protected
  SendFile sse_decode_box_autoadd_send_file(SseDeserializer deserializer);

  @protected
  Start sse_decode_box_autoadd_start(SseDeserializer deserializer);

  @protected
  StartToReceive sse_decode_box_autoadd_start_to_receive(
      SseDeserializer deserializer);

  @protected
  Stop sse_decode_box_autoadd_stop(SseDeserializer deserializer);

  @protected
  DiscoveryIp sse_decode_discovery_ip(SseDeserializer deserializer);

  @protected
  Event sse_decode_event(SseDeserializer deserializer);

  @protected
  EventEnum sse_decode_event_enum(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  EventEnum? sse_decode_opt_box_autoadd_event_enum(
      SseDeserializer deserializer);

  @protected
  RequestToReceive sse_decode_request_to_receive(SseDeserializer deserializer);

  @protected
  SendFile sse_decode_send_file(SseDeserializer deserializer);

  @protected
  Start sse_decode_start(SseDeserializer deserializer);

  @protected
  StartToReceive sse_decode_start_to_receive(SseDeserializer deserializer);

  @protected
  Stop sse_decode_stop(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_discovery_ip(
      DiscoveryIp self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_enum(
      EventEnum self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_request_to_receive(
      RequestToReceive self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_send_file(
      SendFile self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_start(Start self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_start_to_receive(
      StartToReceive self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_stop(Stop self, SseSerializer serializer);

  @protected
  void sse_encode_discovery_ip(DiscoveryIp self, SseSerializer serializer);

  @protected
  void sse_encode_event(Event self, SseSerializer serializer);

  @protected
  void sse_encode_event_enum(EventEnum self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_event_enum(
      EventEnum? self, SseSerializer serializer);

  @protected
  void sse_encode_request_to_receive(
      RequestToReceive self, SseSerializer serializer);

  @protected
  void sse_encode_send_file(SendFile self, SseSerializer serializer);

  @protected
  void sse_encode_start(Start self, SseSerializer serializer);

  @protected
  void sse_encode_start_to_receive(
      StartToReceive self, SseSerializer serializer);

  @protected
  void sse_encode_stop(Stop self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
class RustLibWasmModule implements WasmModule {
  @override
  external Object /* Promise */ call([String? moduleName]);

  @override
  external RustLibWasmModule bind(dynamic thisArg, String moduleName);
}
